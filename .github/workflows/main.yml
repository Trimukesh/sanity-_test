name: Run PowerShell script

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup PowerShell
        uses: microsoft/setup-powershell@v1.0.0

      - name: Run PowerShell script
        shell: pwsh
        run: |
          Add-Type -Path "C:\\Program Files\\Microsoft SQL Server\\130\\SDK\\Assemblies\\Microsoft.SqlServer.Smo.dll"
          [boolean]$debug = $true;
          #Add-PSSnapin SqlServerCmdletSnapin110
          #Add-PSSnapin SqlServerProviderSnapin110
          cls
          write-host $servernames
          $starttime = Get-Date
          write-host $starttime
          
          #[string[]]$servernames = Get-Content -Path D:\\scripts\\ServersList.txt
          [string[]]$servernames = $($env:servernames)
          foreach($servername in $servernames)
          {
            write-host Starting Server $servername
            $dataSource  =  $servername -replace "/","\\"
            ##setup data source
            
            $database = "master"                                 ##Database name
            $TableHeader = "SQL Server Health Check Report"      ##The title of the HTML page
            $path = "D:\\"
            $name = $dataSource -replace "\\\\","_"
            $OutputFile_new = $path + $name + '.html'             ##The file location
            
            $a = "<style>"
            $a = $a + "BODY{background-color:white;}"
            $a = $a + "TABLE{width: 70%;border-width: 1px;border-style: solid;border-color: #2F4F4F;border-collapse: collapse;}"
            $a = $a + "TH{border-width: 1px;padding: 1px;border-style: solid;border-color: #2F4F4F;;background-color:#8FBC8F}"
            $a = $a + "TD{border-width: 1px;padding: 0px;border-style: solid;border-color: #2F4F4F;}"
            $a = $a + "</style>"
            
            $colorTagTable = @{
                                Stopped = ' bgcolor="RED">Stopped<';
                                Read_Write = ' bgcolor="Green">Read_Write<';
                                Read_Only = ' bgcolor="Red">Read_Only<';
                                Running = ' bgcolor="Green">Running<';
                                OFFLINE = ' bgcolor="RED">OFFLINE<';
                                ONLINE  = ' bgcolor="Green">ONLINE<';
                                RESTORING = ' bgcolor="RED">RESORING<';
                                RECOVERING = ' bgcolor="RED">RECOVERING<';
                                RECOVERY_PENDING = ' bgcolor="RED">RECOVERY PENDING<';
                                SUSPECT = ' bgcolor="RED">SUSPECT<';
                                EMERGENCY = ' bgcolor="RED">EMERGENCY<';
                            
                               } 
            
            
            $userid= $($env:username)
            $Password=$($env:password)
            #$userid= $cred.username
            #$password=$cred.GetNetworkCredential().password
            ##Create a string variable with all our connection
